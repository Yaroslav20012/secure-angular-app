import { Component } from '@angular/core';
import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { Router, RouterModule } from '@angular/router';
import { AuthService } from '../../../services/auth.service';

@Component({
  standalone: true,
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.scss'],
  imports: [ReactiveFormsModule, RouterModule]
})
export class LoginComponent {

  loginForm: FormGroup;
  error = '';

  constructor(
    private fb: FormBuilder,
    private authService: AuthService,
    private router: Router
  ) {
    this.loginForm = this.fb.group({
      email: ['', [Validators.required]],
      password: ['', [Validators.required]]
    });
  }

  onSubmit(): void {
    this.error = '';
    try{
      
      if (this.loginForm.valid) {
        const { email, password } = this.loginForm.value;    
        this.authService.login(email, password).subscribe({
          next: () => {
            console.log('–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω');
            this.router.navigate(['/dashboard']);
          },
          error: (err) => {
            console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', err);
            this.error = '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å';          
          }
        });
      }else {
        this.error='–§–æ—Ä–º–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω–∞'
      }
    }catch (e) {
      const err = e as Error;
      console.error('üí• –û—à–∏–±–∫–∞ onLogin:', err.message);
      this.error = '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞';
    }
  }
}